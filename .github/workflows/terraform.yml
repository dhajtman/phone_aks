name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env:
      TF_DIR: terraform
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      TF_CLOUD_WORKSPACE: ${{ secrets.TF_CLOUD_WORKSPACE }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend
        id: backend
        run: |
          cat > "${TF_DIR}"/backend.tf << EOF
          terraform {
            backend "remote" {
               organization = "${TF_CLOUD_ORGANIZATION}"
              
               workspaces {
                 name = "${TF_CLOUD_WORKSPACE}"
               }
            }
          }
          EOF

      - name: Show backend.tf content
        run: cat "${TF_DIR}"/backend.tf

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: |
          terraform -chdir=$TF_DIR init -reconfigure 

      - name: Terraform Apply
        run: |
          terraform -chdir=$TF_DIR apply -auto-approve -var="openai_api_key=$OPENAI_API_KEY"